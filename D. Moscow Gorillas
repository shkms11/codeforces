// https://codeforces.com/contest/1793/problem/D

#include <bits/stdc++.h>
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
 
    long long n;
    cin >> n;
    vector<long long>v1(n+10), v2(n+10);
 
    for(long long i=0,tmp=0; i<n; i++){
        cin >> tmp;
        v1[tmp] = i;
    }
 
    for(long long i=0, tmp=0; i<n; i++){
        cin >> tmp;
        v2[tmp] = i;
    }
 
    long long ans=0;
 
    // mex = 1
    long long left = min(v1[1],v2[1]);
    ans = (left * (left+1))/2;
    long long right = max(v1[1], v2[1]), rc=n-1-right;
    ans+= (rc*(rc+1))/2;
    long long mid = right -left-1;
    ans+= (mid*(mid+1))/2;
 
    // mex = n+1
    ans++;
 
    // mex = [2,n]
    long long l=n, r=-1;
    for(long long mex=2; mex<=n; mex++){
        l = min({l,v1[mex-1],v2[mex-1]});
        r = max({r,v1[mex-1],v2[mex-1]});
        if((l<=v1[mex] && v1[mex] <= r) || (l<=v2[mex] && v2[mex] <= r))
            continue;
 
        long long start =0, end = n-1;
        if(v1[mex] <l)
            start = max(start, v1[mex] +1);
        if(v2[mex] <l)
            start = max(start, v2[mex] +1);
        if(v1[mex]>r)
            end = min(end, v1[mex] -1);
        if(v2[mex]>r)
            end = min (end, v2[mex] -1);
        long long tmp1, tmp2;
        tmp1 = l-start +1;
        tmp2 = end-r+1;
        ans += tmp1 *tmp2;
    }
 
    cout << ans << '\n';
 
 
 
 
}
